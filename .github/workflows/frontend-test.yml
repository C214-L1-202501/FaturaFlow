name: FaturaFlow CI Pipeline Frontend

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  setup-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: 'npm'

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: backend/node_modules
          key: backend-modules-${{ hashFiles('backend/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Start MongoDB
        run: |
          docker run -d \
            --name mongodb \
            -p 27017:27017 \
            -e MONGO_INITDB_ROOT_USERNAME=admin \
            -e MONGO_INITDB_ROOT_PASSWORD=admin \
            mongo:6

      - name: Wait for MongoDB
        run: |
          echo "Waiting for MongoDB to be ready..."
          npx wait-on tcp:27017 --timeout 60000
          echo "MongoDB is ready!"

      - name: Start backend server
        run: npm run dev &
        env:
          PORT: 3000
          MONGO: mongodb://admin:admin@localhost:27017/faturaflow?authSource=admin

  build-frontend:
    needs: setup-backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "20"
          cache: 'npm'

      - name: Cache dependencies
        id: cache-frontend
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: frontend-modules-${{ hashFiles('frontend/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-frontend.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build
        run: npm run build

  test-jest:
    needs: build-frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Cache dependencies
        id: cache-frontend
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: frontend-modules-${{ hashFiles('frontend/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-frontend.outputs.cache-hit != 'true'
        run: npm ci

      - name: Run Jest unit tests
        run: npm test -- --coverage --watchAll=false

      - name: Upload test coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jest-coverage
          path: frontend/coverage
          if-no-files-found: ignore

  test-cypress:
    needs: test-jest
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: "20"

      - name: Cache dependencies
        id: cache-frontend
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: frontend-modules-${{ hashFiles('frontend/package-lock.json') }}

      - name: Install dependencies
        if: steps.cache-frontend.outputs.cache-hit != 'true'
        run: npm ci

      - name: Start frontend server
        run: npm run dev &

      - name: Wait for frontend
        run: |
          echo "Waiting for frontend to be ready..."
          npx wait-on http://localhost:5173 --timeout 120000
          echo "Frontend is ready!"

      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          working-directory: frontend
          browser: chrome
          spec: cypress/e2e/testelogin.cy.js
          config: baseUrl=http://localhost:5173
          record: false
          config-file: cypress.config.ts
          env: language=pt-BR
        env:
          LANGUAGE: "pt_BR:pt"
          LANG: "pt_BR.UTF-8"
          LC_ALL: "pt_BR.UTF-8"

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-artifacts
          path: |
            frontend/cypress/screenshots
            frontend/cypress/videos
          if-no-files-found: ignore